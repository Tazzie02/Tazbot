apply plugin: 'java'
apply plugin: 'eclipse'

def versionObj = new Version(major: 1, minor: 0, patch: 0)
version = "${versionObj.toString()}"

sourceCompatibility = 1.8
targetCompatibility = 1.8

jar {
    baseName = project.name
    manifest {
        attributes 'Implementation-Version': version
        attributes 'Main-Class': "com.tazzie02.tazbot.Tazbot"
    }
}

//create a single Jar with all dependencies
task fatJar(type: Jar) {
    manifest {
        attributes 'Implementation-Version': version
        attributes 'Main-Class': "com.tazzie02.tazbot.Tazbot"
    }
    baseName = project.name + '-withDependencies'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

repositories {
    jcenter()
}

dependencies {
    // The production code uses the SLF4J logging API at compile time
    //compile 'org.slf4j:slf4j-api:1.7.12'

	compile 'net.dv8tion:JDA:2.0.0_242'
	compile 'com.google.code.gson:gson:2.6.1'
	compile 'org.jsoup:jsoup:1.8.3'
	compile 'com.googlecode.soundlibs:mp3spi:1.9.5-1'
	//compile 'ca.pjer:chatter-bot-api:1.3.3'
	

    testCompile 'junit:junit:4.12'
}

class Version {
    int major, minor, patch

    String getMajor() {
        "${major}"
    }

    String getMinor() {
        "${minor}"
    }

    String getPatch() {
        "${patch}"
    }

    String getBuild() {
        //System.getenv("BUILD_NUMBER") ? System.getenv("BUILD_NUMBER") : "-1"
        "BUILD"
    }

    String toString() {
        "${getMajor()}.${getMinor()}.${getPatch()}_${getBuild()}"
    }
}

//Creates the w/ dependencies jar.
assemble.dependsOn fatJar